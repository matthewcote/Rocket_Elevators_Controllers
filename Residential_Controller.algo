DEFINE Floor_Display USING display_number AND display_direction
    display_number: display_number
    display_direction: direction
    SEQUENCE set_display USING floor and direction
        SET display_number TO floor
        SET dispaly_direction TO direction
    ENDSEQUENCE
ENDDEFINE

DEFINE Elevator_Door 
    SET door_status TO "ClOSED"

    SEQUENCE open_door
        SET door_status TO "OPEN"
    ENDSEQUENCE

    SEQUENCE close_door 
        SET door_status TO "CLOSED"
    ENDSEQUENCE
    SEQUENCE elevator_door_alert 
        CALL open_door
        CALL wait
    ENDSEQUENCE   
ENDDEFINE

DEFINE Door USING floor 
    floor:  floor,
    status: "CLOSED" 
    SEQUENCE open_door
        SET door_status TO "OPEN"
    ENDSEQUENCE

    SEQUENCE close_door 
        SET door_status TO "CLOSED"
    ENDSEQUENCE
    SEQUENCE elevator_door_alert 
        CALL open_door
        CALL wait
    ENDSEQUENCE
ENDDEFINE

DEFINE Request_Button USING floor 
    floor: floor,
    status: "IDLE"

    SEQUENCE request_button_pushed USING floor
        SET request_button status TO "ACTIVE"
        IF elevator status is "IDLE"
            CALL elevator push_floor_list WITH floor
            RETURN 'OR ESCAPE SEQUENCE, BREAK SEQUENCE'
        ENDIF   
        IF elevator status is "UP"
            IF request_button floor is more than elevator current_floor
                CALL elevator push_floor_list WITH floor
                RETURN
            ENDIF
        ENDIF  
        IF elevator status is "DOWN"
            IF request_button floor is less than elevator current_floor
                CALL elevator push_floor_list WITH floor
                RETURN
            ENDIF
        ENDIF   
    ENDSEQUENCE
ENDDEFINE

DEFINE Call_Button USING floor AND direction 
    floor:  floor,
    direction: direction,
    status: "IDLE" 

    SEQUENCE call_button_pushed USING elevator_list
        SET call_button status TO "ACTIVE" 
        SET elevator_choice to "NULL"   
        IF call_button direction EQUALS "DOWN" 
            SET diff TO 0
            SET best_diff TO 9999       
            FOR EACH elevator IN elevator_list 
                IF elevator floor is more than call_button floor and elevator status is equal to "DOWN" 
                    SET diff TO elevator floor minus call_button floor
                    IF diff is less than best_diff'
                        SET elevator_choice TO elevator
                        SET best_diff TO diff
                    ENDIF    
                ENDIF
            ENDFOR
            IF elevator choice does not equal "NULL"
                CAll elevator push_floor_list WITH call_button floor
                RETURN from SEQUENCE
            ENDIF
            FOR EACH elevator IN elevator_list 
                SET diff to elevator floor minus call_button floor
                IF elevator status is equal to "IDLE"
                    IF diff is less than best_diff   
                        SET elevator choice TO elevator
                        SET best_diff TO diff
                    ENDIF
                ENDIF
            ENDFOR
            IF elevator choice does not equal "NULL"
                CAll elevator push_floor_list WITH call_button floor
                RETURN from SEQUENCE
            ENDIF
        ENDIF
        IF call_button direction EQUALS "UP" 
            SET diff to 0
            set best_diff to 9999
            FOR EACH elevator IN elevator_list 
                IF elevator floor is less than call_button floor and 
                elevator status is equal to "UP" 
                SET diff to call_button floor minus elevator floor 
                    IF diff is less than best_diff'
                        SET elevator_choice TO elevator
                        SET best_diff to diff
                    ENDIF   
                ENDIF
            ENDFOR
            IF elevator choice does not equal "NULL"
                CAll elevator push_floor_list WITH call_button floor
                RETURN from SEQUENCE
            ENDIF
            FOR EACH elevator IN elevator_list 
                IF elevator status is equal to "IDLE"
                    IF diff is less than best_diff   
                        SET elevator choice TO elevator
                        SET best_diff TO diff
                    ENDIF
                ENDIF
            ENDFOR
            IF elevator choice does not equal NULL
                CAll elevator push_floor_list WITH call_button floor
                RETURN from SEQUENCE
            ENDIF     
        ENDIF 
    ENDSEQUENCE

ENDDEFINE

DEFINE Elevator USING num AND floor_num
    name: num,
    status: "IDLE", 
    current_floor: 1,
    request_button_list: SET TO EMPTY List,
    door_list: SET TO EMPTY List,
    floor_list: SET TO EMPTY List,
    elevator_door: SET elevator_door TO INSTATIATE Elevator_Door
    floor_display: SET Floor_Display TO INSTATIATE Floor_Display WITH current_floor and status
    
    SET floor TO 1
    WHILE floor is less than or equal to floor_num
        SET request_button TO INSTANTIATE Request_Button WITH floor
        PUSH request_button TO request_button_list
        SET door TO INSTANTIATE Door WITH floor
        PUSH door TO door_list
        INCREMENT floor
    ENDWHILE

    SEQUENCE push_floor_list USING floor 
        push floor TO floor_list 
        CALL move 
    END SEQUENCE

    SEQUENCE move 
        SET direction TO "NULL"
        FOR EACH floor IN floor_list 
            IF floor IS EQUAL TO current_floor
                REMOVE floor FROM floor_list
                CALL stop 
            ELSE 
                IF direction IS EQUAL TO "NULL" AND IF floor IS LESS THAN current_floor
                    SET direction TO "DOWN"
                    SET status TO direction
                    CALL elevator floor_display set_display WITH floor and status
                    INCREMENT current_floor by negative 1 'TODO: Make function:'
                    CALL elevator floor_display set_display WITH floor and status
                    CALL elevator move 
                ENDIF
                IF direction IS EQUAL TO "NULL" AND IF floor IS MORE THAN current_floor
                    SET direction to "UP"
                    SET status TO direction
                    CALL elevator floor_display set_display WITH floor and status
                    INCREMENT current_floor TO elevator by 1 'TODO: Make function:'
                    CALL elevator floor_display set_display WITH floor and status
                    CALL move
                ENDIF
            ENDIF
        ENDFOR
        SET status to "IDLE"
    ENDSEQUENCE

    SEQUENCE stop 
        CALL open_door 
        
        FOR EACH request_button in request_button_list
            IF request_button floor is equal to current_floor
                SET request_button status TO "IDLE"
            ENDIF
        ENDFOR
        
        CALL wait 
            
        IF floor_list IS EMPTY
            IF colum call_list is EMPTY
                SET status TO "IDLE"
            ELSE
                FOR EACH floor IN column call_list
                    PUSH floor TO elevator floor_list 
                ENDFOR
                CALL move 
            ENDIF
        ELSE
            CALL move 
        ENDIF

    ENDSEQUENCE

    SEQUENCE wait 'USING x
        'TODO - can add a wait variable to be set when initializing column or change to like 3 seconds'
        WAIT x seconds
        CALL close_door 
    ENDSEQUENCE
ENDDEFINE

DEFINE Column USING floor_num AND elevator_num 
    mode: mode,
    elevator_list: SET TO EMPTY List,
    call_button_list: SET TO EMPTY List,
    floor_num: floor_num,
    elevator_num: elevator_num,
    
    call fill_elevator_list
    call fill_call_button_list WITH floor_num

    SEQUENCE fill_elevator_list 
        SET num TO 1
        WHILE num is less than or equal TO elevator_num 
            SET elevator TO INSTANTIATE Elevator WITH num AND floor_num
            PUSH elevator TO elevator_list 
            INCREMENT num
        ENDWHILE
    ENDSEQUENCE

    SEQUENCE fill_call_button_list USING floor_num
        SET floor TO 1
        WHILE floor is less than or equal TO floor_num
            IF floor is not equal TO 1 
                SET call_button TO INSTANTIATE Call_Button USING floor AND "DOWN"
                PUSH call_button TO call_button_list 
            ENDIF
            IF floor is not equal TO floor_num
                SET call_button TO INSTANTIATE Call_Button USING floor AND "UP"
                PUSH call_button to call_button_list
            ENDIF
            INCREMENT floor
        ENDWHILE
    ENDSEQUENCE

    SEQUENCE choose_elevator USING floor and elevator_list
        SET call_button status TO "ACTIVE" 
        SET elevator_choice to "NULL"
        SET diff TO 0
        SET best_diff TO 9999
        FOR EACH elevator IN elevator_list 
            IF elevator floor is more than floor and elevator status is equal to "DOWN" 
                SET diff to elevator floor minus floor
                IF diff is less than best_diff
                    SET elevator_choice TO elevator
                    SET best_diff to diff
                ENDIF    
            ENDIF
        ENDFOR
        IF elevator choice does not equal "NULL"
            CAll elevator push_floor_list WITH floor
            RETURN FROM SEQUENCE
        ENDIF
        FOR EACH elevator IN elevator_list 
            IF elevator status is equal to IDLE
                IF elevator floor IS MORE THAN floor
                    SET diff TO elevator floor minus floor
                        IF diff is less than best_diff   
                            SET elevator choice TO elevator
                            SET best_diff TO diff
                        ENDIF
                    ENDIF
                ENDIF
                IF elevator floor IS LESS THAN floor
                    SET diff TO floor minus elevator_floor
                        IF diff is less than best_diff   
                            SET elevator choice TO elevator
                            SET best_diff TO diff
                        ENDIF
                    ENDIF
                ENDIF
            ENDIF
        ENDFOR
        IF elevator choice does not equal "NULL"
            CAll elevator push_floor_list WITH floor 
            RETURN from SEQUENCE
        ENDIF
    ENDSEQUENCE

    SEQUENCE push_call_button USING floor and direction
        FOR EACH call_button IN call_button_list
            IF call_button floor is equal to floor and call_button direction is equal to direction
                Call call_button call_button_pushed WITH elevator_list
            ENDIF
        ENDFOR
    ENDSEQUENCE
ENDDEFINE

SET column1 TO INSTANTIATE Column WITH 10 AND 2 'creates a column with 10 floors, and 2 elevators'

'SCENARIO 1'
SET column1 elevator_list first element current_floor attribute to 2 
SET column1 elevator_list second element current_floor attribute to 6
CALL column1 push_call_button WITH 3 AND "UP"
CALL column1 elevator_list[first element] push_floor_list WITH 7

'SCENARIO 2'

SET column1 elevator_list first element current_floor attribute to 10 
SET column1 elevator_list second element current_floor attribute to 3
CALL column1 push_call_button WITH 1 AND "UP"
CALL column1 elevator_list[second element] push_floor_list WITH 6

CALL column1 push_call_button WITH 3 AND "UP"
CALL column1 elevator_list[second element] push_floor_list WITH 5

CALL column1 push_call_button WITH 9 AND "DOWN"
CALL column1 elevator_list[second element] push_floor_list WITH 6


