DEFINE Floor_Display USING display_number AND display_direction
    display_number: display_number
    display_direction: direction
    SEQUENCE set_display USING floor and direction
        SET display_number TO floor
        SET dispaly_direction TO direction
    ENDSEQUENCE
ENDDEFINE

DEFINE Elevator_Door 
    SET door_status TO "ClOSED"

    SEQUENCE open_door
        SET door_status TO "OPEN"
    ENDSEQUENCE

    SEQUENCE close_door 
        SET door_status TO "CLOSED"
    ENDSEQUENCE
    SEQUENCE elevator_door_alert 
        CALL open_door
        CALL wait
    ENDSEQUENCE   
ENDDEFINE

DEFINE Door USING floor 
    floor:  floor,
    status: "IDLE" 
    SEQUENCE open_door
        SET door_status TO "OPEN"
    ENDSEQUENCE

    SEQUENCE close_door 
        SET door_status TO "CLOSED"
    ENDSEQUENCE
    SEQUENCE elevator_door_alert 

        CALL open_door
        CALL wait
    ENDSEQUENCE
    'TODO'
ENDDEFINE

DEFINE Call_Button USING floor
    floor:  floor,
    status: "IDLE" 
    SEQUENCE call_button_pushed USING elevator_list
        SET call_button status TO "ACTIVE" 
        SET elevator_choice to "NULL"
        SET diff TO 0
        SET best_diff TO 9999
        FOR EACH elevator IN elevator_list 
            IF elevator floor is more than call_button floor and elevator status is equal to "DOWN" 
                SET diff to elevator floor minus call_button floor
                IF diff is less than best_diff'
                    SET elevator_choice TO elevator
                    SET best_diff to diff
                ENDIF    
            ENDIF
        ENDFOR
        IF elevator choice does not equal "NULL"
            CAll elevator push_floor_list WITH call_button floor
            RETURN FROM SEQUENCE
        ENDIF
        FOR EACH elevator IN elevator_list 
            IF elevator status is equal to IDLE
                IF elevator floor IS MORE THAN call_button floor
                    SET diff TO elevator floor minus call_button floor
                        IF diff is less than best_diff   
                            SET elevator choice TO elevator
                            SET best_diff TO diff
                        ENDIF
                    ENDIF
                ENDIF
                IF elevator floor IS LESS THAN call_button floor
                    SET diff TO call_button floor minus elevator_floor
                        IF diff is less than best_diff   
                            SET elevator choice TO elevator
                            SET best_diff TO diff
                        ENDIF
                    ENDIF
                ENDIF
            ENDIF
        ENDFOR
        IF elevator choice does not equal "NULL"
            CAll elevator push_floor_list WITH call_button floor 
            RETURN from SEQUENCE
        ENDIF
    ENDSEQUENCE
ENDDEFINE

DEFINE Elevator USING num AND bottom_floor AND top_floor AND origin
    name: num,
    status: "IDLE",
    origin: origin,
    current_floor: origin,
    door_list: SET TO EMPTY List,
    floor_list: SET TO EMPTY List,
    elevator_door: SET elevator_door TO INSTATIATE Elevator_Door
    floor_display: SET Floor_Display TO INSTATIATE Floor_Display WITH current_floor
    SET door TO INSTANTIATE Door WITH origin
    PUSH door TO door_list 
    
    SET floor TO bottom_floor
    WHILE floor is less than or equal to top_floor
        SET door TO INSTANTIATE Door WITH floor
        PUSH door TO door_list
        INCREMENT floor
    ENDWHILE

    SEQUENCE push_floor_list USING floor 
        push floor TO floor_list 
        CALL move 
    END SEQUENCE

    SEQUENCE go_to_origin
        set TODO
    END SEQUENCE

    SEQUENCE move 'should take time'
        CALL elevator floor_display set_display WITH current_floor AND status
        SET direction TO "NULL"
            IF floor IS EQUAL TO current_floor
                REMOVE floor FROM floor_list
                CALL stop 
            ELSE 
                IF direction IS EQUAL TO "NULL" AND IF floor IS LESS THAN current_floor
                    SET direction TO "DOWN"
                    SET status TO direction
                    CALL elevator floor_display set_display WITH current_floor AND status
                    INCREMENT current_floor by negative 1 
                    CALL move 
                ENDIF
                IF direction IS EQUAL TO "NULL" AND IF floor IS MORE THAN current_floor
                    SET direction to "UP"
                    SET status TO direction
                    CALL elevator floor_display set_display WITH current_floor AND status
                    INCREMENT current_floor TO elevator by 1 
                    CALL move
                ENDIF
            ENDIF
    ENDSEQUENCE

    SEQUENCE stop 
        CALL open_doors
        CALL elevator floor_display set_display WITH current_floor AND status
        
        CALL wait 

        CALL close_doors
            
        IF floor_list IS EMPTY
            IF colum call_list is EMPTY
                SET status TO "IDLE"
                CALL elevator floor_display set_display WITH current_floor AND status
            ELSE
                FOR EACH floor IN column call_list
                    PUSH floor TO elevator floor_list 
                ENDFOR
                CALL move 
            ENDIF
        ELSE
            CALL move 
        ENDIF
    ENDSEQUENCE

    SEQUENCE wait 'time
        'TODO - can add a wait variable to be set when initializing column or change to like 3 seconds'
        'WAIT x seconds
    ENDSEQUENCE

    SEQUENCE close_doors USING floor
        CALL elevator_door close_door
        FOR EACH door in door_list
            IF door floor is equal to floor
                call door close_door
            END IF
        ENDFOR
    ENDSEQUENCE

    SEQUENCE open_doors USING floor
        CALL elevator_door open_door
        FOR EACH door in door_list
            IF door floor is equal to floor
                call door open_door
            END IF
        ENDFOR
    ENDSEQUENCE
ENDDEFINE

DEFINE Column USING bottom_floor AND top_floor AND elevator_num AND origin
    elevator_list: SET TO EMPTY List,
    call_button_list: SET TO EMPTY List,
    bottom_floor: bottom_floor,
    top_floor: top_floor,
    elevator_num: elevator_num,
    origin: origin
    CALL fill_elevator_list,
    CALL fill_call_button_list WITH bottom_floor AND top_floor,

    SEQUENCE fill_elevator_list USING bottom_floor AND top_floor AND origin
        SET num TO 0
        WHILE num is less than or equal TO elevator_num 
            SET elevator TO INSTANTIATE Elevator WITH num AND bottom_floor AND top_floor AND origin
            PUSH elevator TO elevator_list 
            INCREMENT num
        ENDWHILE
    ENDSEQUENCE

    SEQUENCE fill_call_button_list USING bottom_floor AND top_floor,
        SET floor TO bottom_floor
        WHILE floor is less than or equal TO top_floor
            SET call_button TO INSTANTIATE Call_Button USING floor 
            PUSH call_button TO call_button_list 
            INCREMENT floor
        ENDWHILE
    ENDSEQUENCE

    SEQUENCE choose_elevator USING floor RETURNING elevator_name
        SET call_button status TO "ACTIVE" 
        SET elevator_choice to "NULL"
        SET diff TO 0
        SET best_diff TO 9999
        FOR EACH elevator IN elevator_list 
            IF elevator floor is more than floor and elevator status is equal to "DOWN" 
                SET diff to elevator floor minus floor
                IF diff is less than best_diff'
                    SET elevator_choice TO elevator
                    SET best_diff to diff
                ENDIF    
            ENDIF
        ENDFOR
        IF elevator choice does not equal "NULL"
            CAll elevator push_floor_list WITH floor
                RETURN elevator
        ENDIF
        FOR EACH elevator IN elevator_list 
            IF elevator status is equal to IDLE
                IF elevator floor IS MORE THAN floor
                    SET diff TO elevator floor minus floor
                        IF diff is less than best_diff   
                            SET elevator choice TO elevator
                            SET best_diff TO diff
                        ENDIF
                    ENDIF
                ENDIF
                IF elevator floor IS LESS THAN floor
                    SET diff TO floor minus elevator_floor
                        IF diff is less than best_diff   
                            SET elevator choice TO elevator
                            SET best_diff TO diff
                        ENDIF
                    ENDIF
                ENDIF
            ENDIF
        ENDFOR
        IF elevator choice does not equal "NULL"
            CAll elevator push_floor_list WITH floor 
            RETURN elevator
        ENDIF
    ENDSEQUENCE

    SEQUENCE push_call_button USING floor and direction
        FOR EACH call_button IN call_button_list
            IF call_button floor is equal to floor and call_button direction is equal to direction
                Call call_button call_button_pushed WITH elevator_list
            ENDIF
        ENDFOR
    ENDSEQUENCE
ENDDEFINE

DEFINE Battery USING origin 
    column_list: SET TO EMPTY List,
    origin: origin
    INIT battery_control as EMPTY object

    SEQUENCE add_column USING bottom_floor AND top_floor AND elevator_num AND origin
        SET column TO INSTANTIATE Column USING bottom_floor AND top_floor AND elevator_num 
        SET column origin TO origin
        PUSH column to column_list
    ENDSEQUENCE

    SEQUENCE set_battery_control USING column_list AND origin
        SET battery_control TO INSTANTIATE Battery_Control WITH column_list
    ENDSEQUENCE

    SEQUENCE choose_column USING floor RETURNING elevator_name and column_name
        FOR EACH column in column_list
            IF floor is more than or equal to bottom floor AND less than or equal to the top_floor
                SET elevator_name TO CALL column choose_elevator USING floor
                RETURN elevator_name and column_name
            ENDIF
        END FOR
    ENDSEQUENCE
ENDDEFINE

DEFINE Battery_Control USING column_list AND origin
    column_list: column_list
    set welcome TO "WELCOME - WHAT FLOOR WOULD YOU LIKE TO GO TO"
    control_dispay: welcome
    SET floor_display_list TO EMPTY list 

    SEQUENCE input_number USING number 
    ENDSEQUENCE

    SEQUENCE input_call_elevator USING floor
        SET battery choose_column WITH floor
        SET WELCOME TO "Proceed to " + elevator name + " at " + column_name
    ENDSEQUENCE
ENDDEFINE

'Test Scenarios - Corporate'

SET battery TO INSTANTIATE Battery WITH 1
CALL battery add_column WITH -6 AND -1 AND 1
CALL battery add_column WITH 2 AND 20 AND 1
CALL battery add_column WITH 21 AND 40 AND 1
CALL battery add_column WITH 41 AND 60 AND 1



